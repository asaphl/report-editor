[{"C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\index.js":"1","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\reportWebVitals.js":"2","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\App.js":"3","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\reducers\\index.js":"4","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\components\\Page.jsx":"5","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\components\\Toolbar.jsx":"6","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\components\\BlockProperties.jsx":"7","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\reducers\\datasourcesReducer.js":"8","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\reducers\\pageReducer.js":"9","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\actions\\index.js":"10","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\reducers\\selectedReducer.js":"11","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\constants\\blockTypes.js":"12","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\components\\Block.jsx":"13","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\components\\ToolbarBlock.jsx":"14","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\components\\datasource\\Datasource.jsx":"15","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\constants\\actions.js":"16","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\constants\\datasourceTypes.js":"17","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\components\\BlockContent.jsx":"18","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\components\\datasource\\DatasourceRemote.jsx":"19","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\components\\datasource\\DatasourceStatic.jsx":"20","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\components\\datasource\\DatasourceLocal.jsx":"21","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\components\\DbFormAddCountry.jsx":"22"},{"size":632,"mtime":1610892558322,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1610888252062,"results":"25","hashOfConfig":"24"},{"size":1546,"mtime":1612215047866,"results":"26","hashOfConfig":"24"},{"size":354,"mtime":1611147647185,"results":"27","hashOfConfig":"24"},{"size":600,"mtime":1610971725340,"results":"28","hashOfConfig":"24"},{"size":644,"mtime":1610957012905,"results":"29","hashOfConfig":"24"},{"size":531,"mtime":1611061875627,"results":"30","hashOfConfig":"24"},{"size":875,"mtime":1611152713759,"results":"31","hashOfConfig":"24"},{"size":4427,"mtime":1611611789099,"results":"32","hashOfConfig":"24"},{"size":1099,"mtime":1611249003653,"results":"33","hashOfConfig":"24"},{"size":412,"mtime":1611249047788,"results":"34","hashOfConfig":"24"},{"size":848,"mtime":1611164261304,"results":"35","hashOfConfig":"24"},{"size":858,"mtime":1611155354642,"results":"36","hashOfConfig":"24"},{"size":918,"mtime":1610977620220,"results":"37","hashOfConfig":"24"},{"size":1056,"mtime":1611612384735,"results":"38","hashOfConfig":"24"},{"size":282,"mtime":1611249021443,"results":"39","hashOfConfig":"24"},{"size":1128,"mtime":1611250470089,"results":"40","hashOfConfig":"24"},{"size":1288,"mtime":1610977493770,"results":"41","hashOfConfig":"24"},{"size":2275,"mtime":1611251869071,"results":"42","hashOfConfig":"24"},{"size":1309,"mtime":1611249075386,"results":"43","hashOfConfig":"24"},{"size":2108,"mtime":1611664646125,"results":"44","hashOfConfig":"24"},{"size":1551,"mtime":1612276429035,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"136f8hg",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"48"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"48"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\index.js",[],["104","105"],"C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\reportWebVitals.js",[],"C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\App.js",["106","107","108","109"],"import logo from './logo.svg';\nimport './App.css';\nimport Page from './components/Page';\nimport { DragDropContext, Draggable } from 'react-beautiful-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addBlock, reorderBlock, selectBlock } from './actions';\nimport Toolbar from './components/Toolbar';\nimport styled from 'styled-components';\nimport BlockProperties from './components/BlockProperties';\nimport axios from 'axios';\nimport DbFormAddCountry from './components/DbFormAddCountry';\n\nconst Application = styled.div`\n  display: grid;\n  grid-template-columns: 100px auto 200px;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const page = useSelector(state => state.page);\n\n  // axios.get('http://localhost:5000/api/hello').then(res => console.log(res));\n\n  const handleDrop = result => {\n    dispatch(selectBlock(page[result.source.index]));\n    if (result.destination.droppableId === 'page'){\n      if (result.source.droppableId === 'page') {\n        dispatch(reorderBlock(result.draggableId, result.source.index, result.destination.index));\n      } else {\n        dispatch(addBlock(result.source.index, result.destination.index));\n      }\n      // dispatch(selectBlock(result.destination.index));\n      \n    }\n    \n  }\n\n  return (\n    <Application className=\"App\">\n      <DragDropContext onDragEnd={handleDrop}>\n        <Toolbar />\n        { /*<Page />*/ }\n        <DbFormAddCountry></DbFormAddCountry>\n        <BlockProperties />\n      </DragDropContext>\n      \n    </Application>\n  );\n}\n\nexport default App;\n","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\reducers\\index.js",[],"C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\components\\Page.jsx",[],"C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\components\\Toolbar.jsx",[],"C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\components\\BlockProperties.jsx",["110","111","112","113"],"import Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Datasource from './datasource/Datasource';\r\n\r\nfunction BlockProperties(props) {\r\n    const selected = useSelector(state => state.selected);\r\n    const page = useSelector(state => state.page);\r\n    const properties = page[selected];\r\n\r\n    \r\n\r\n\r\n    \r\n    \r\n    return (\r\n        <div>\r\n            <Datasource></Datasource>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BlockProperties;","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\reducers\\datasourcesReducer.js",[],"C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\reducers\\pageReducer.js",["114","115"],"import {BLOCK_TYPES, DEFAULT_BLOCKS} from '../constants/blockTypes';\r\nimport { v4 as uuid} from 'uuid';\r\nimport { ADD_BLOCK, REMOVE_BLOCK, REORDER_BLOCK, UPDATE_BLOCK } from '../constants/actions';\r\nimport { DATASOURCE_STATIC, DATASOURCE_REMOTE, DATASOURCE_LOCAL } from '../constants/datasourceTypes';\r\n\r\nconst initState = [\r\n    {\r\n        id: '0',\r\n        type: BLOCK_TYPES.HEADLINE,\r\n        content: 'Headline 1',\r\n        data: {\r\n            type: DATASOURCE_STATIC,\r\n            content: 'Headline 1'\r\n        }\r\n    },\r\n    {\r\n        id: '1',\r\n        type: BLOCK_TYPES.PARAGRAPH,\r\n        content: 'lorLorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse ut nisi at risus tempus porta at ac nibh. Duis molestie orci in odio commodo elementum. Ut pharetra finibus libero, non feugiat lacus viverra non. Duis ac metus in lorem rutrum consectetur. Phasellus lacinia fermentum massa. Etiam tincidunt aliquam orci, eu condimentum felis ultricies vel. Proin fermentum turpis ac ex ornare, id auctor est ullamcorper.em100',\r\n        data: {\r\n            type: DATASOURCE_REMOTE,\r\n            src: 'Wikipedia',\r\n            url: 'https://en.wikipedia.org/w/api.php',\r\n            params: {\r\n                action: 'query',\r\n                format: 'json',\r\n                origin: '*',\r\n                prop: 'extracts',\r\n                explaintext: 1,\r\n                titles: 'Spain',\r\n            },\r\n            config: {\r\n                headers: {\r\n                    \"Access-Control-Allow-Origin\": \"*\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {\r\n        id: '2',\r\n        type: BLOCK_TYPES.PARAGRAPH,\r\n        content: 'lorLorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse ut nisi at risus tempus porta at ac nibh. Duis molestie orci in odio commodo elementum. Ut pharetra finibus libero, non feugiat lacus viverra non. Duis ac metus in lorem rutrum consectetur. Phasellus lacinia fermentum massa. Etiam tincidunt aliquam orci, eu condimentum felis ultricies vel. Proin fermentum turpis ac ex ornare, id auctor est ullamcorper.em100',\r\n        data: {\r\n            type: DATASOURCE_LOCAL,\r\n            table: 'Countries',\r\n            column: 'History',\r\n            where: {\r\n                CountryName: 'Spain' \r\n            }\r\n        }\r\n    },\r\n    {\r\n        id: '3',\r\n        type: BLOCK_TYPES.HEADLINE,\r\n        content: 'Headline 2',\r\n        data: {\r\n            type: DATASOURCE_STATIC,\r\n            content: 'Headline 1'\r\n        }\r\n    },\r\n    {\r\n        id: '4',\r\n        type: BLOCK_TYPES.PARAGRAPH,\r\n        content: 'lorLorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse ut nisi at risus tempus porta at ac nibh. Duis molestie orci in odio commodo elementum. Ut pharetra finibus libero, non feugiat lacus viverra non. Duis ac metus in lorem rutrum consectetur. Phasellus lacinia fermentum massa. Etiam tincidunt aliquam orci, eu condimentum felis ultricies vel. Proin fermentum turpis ac ex ornare, id auctor est ullamcorper.em100',\r\n        data: {\r\n            type: DATASOURCE_STATIC,\r\n            content: 'Headline 1'\r\n        }\r\n    },\r\n    {\r\n        id: '5',\r\n        type: BLOCK_TYPES.IMAGE,\r\n        content: 'http://via.placeholder.com/150',\r\n        data: {\r\n            type: DATASOURCE_STATIC,\r\n            content: 'Headline 1'\r\n        }\r\n    },\r\n\r\n]\r\n\r\n\r\n\r\nexport default function pageReducer(state = initState, action) {\r\n    let newState = Array.from(state);\r\n    switch(action.type){\r\n        case REORDER_BLOCK:\r\n            const block = state[action.source];\r\n            newState.splice(action.source, 1);\r\n            newState.splice(action.destination, 0, block);\r\n            return newState;\r\n            break;\r\n        case ADD_BLOCK:\r\n            const defaulBlocksArray = Array.from(DEFAULT_BLOCKS);\r\n            const newBlock = { \r\n                id: uuid(), \r\n                ...defaulBlocksArray[action.source]\r\n            };\r\n            newState.splice(action.destination, 0, newBlock);\r\n            return newState;\r\n            break;\r\n        case UPDATE_BLOCK:\r\n            return state.map(block => {\r\n                if (block.id === action.payload.id) return action.payload;\r\n                return block;\r\n            });\r\n        case REMOVE_BLOCK:\r\n            return state.filter(block => block.id !== action.payload.id);\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\actions\\index.js",["116"],"import { REORDER_BLOCK, ADD_BLOCK, SELECT_BLOCK, UPDATE_BLOCK, REMOVE_BLOCK, UPDATE_SELECTED_BLOCK } from \"../constants/actions\"\r\nimport { v4 as uuid }  from 'uuid';\r\n\r\nexport const reorderBlock = (blockId, sourceIndex, destinationIndex) => {\r\n    return {\r\n        type: REORDER_BLOCK,\r\n        source: sourceIndex,\r\n        destination: destinationIndex,\r\n        payload: {\r\n            id: blockId\r\n        }\r\n    }\r\n}\r\n\r\nexport const addBlock = (sourceIndex, destinationIndex) => {\r\n    return {\r\n        type: ADD_BLOCK,\r\n        source: sourceIndex,\r\n        destination: destinationIndex,\r\n    }\r\n}\r\n\r\nexport const updateBlock = (block) => {\r\n    return {\r\n        type: UPDATE_BLOCK,\r\n        payload: block\r\n    }\r\n}\r\n\r\nexport const removeBlock = block => {\r\n    return {\r\n        type: REMOVE_BLOCK,\r\n        payload: block\r\n    }\r\n}\r\n\r\nexport const selectBlock = (block) => {\r\n    return {\r\n        type: SELECT_BLOCK,\r\n        payload: block\r\n    }\r\n}\r\n\r\nexport const updateSelectedBlock = block => {\r\n    return {\r\n        type: UPDATE_SELECTED_BLOCK,\r\n        payload: block\r\n    }\r\n}","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\reducers\\selectedReducer.js",["117","118","119"],"import { ADD_BLOCK, SELECT_BLOCK, UPDATE_SELECTED_BLOCK } from \"../constants/actions\"\r\n\r\nexport default function selectedReducer(state = null, action) {\r\n    switch (action.type) {\r\n        case SELECT_BLOCK:\r\n            return action.payload;\r\n            break;\r\n        case UPDATE_SELECTED_BLOCK:\r\n            return action.payload;\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\constants\\blockTypes.js",["120","121","122","123"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHeading, faAlignLeft, faImage } from '@fortawesome/free-solid-svg-icons'\r\nimport { DATASOURCE_STATIC } from './datasourceTypes';\r\n\r\nexport const BLOCK_TYPES = {\r\n    HEADLINE: 'HEADLINE',\r\n    PARAGRAPH: 'PARAGRAPH',\r\n    IMAGE: 'IMAGE'\r\n}\r\n\r\nexport const DEFAULT_BLOCKS = [\r\n    {\r\n        type: BLOCK_TYPES.HEADLINE,\r\n        content: '',\r\n        data: {\r\n            type: DATASOURCE_STATIC,\r\n            content: ''\r\n        }\r\n    },\r\n    {\r\n        type: BLOCK_TYPES.PARAGRAPH,\r\n        content: '',\r\n        data: {\r\n            type: DATASOURCE_STATIC,\r\n            content: ''\r\n        }\r\n    },\r\n    {\r\n        type: BLOCK_TYPES.IMAGE,\r\n        content: '',\r\n        data: {\r\n            type: DATASOURCE_STATIC,\r\n            content: ''\r\n        }\r\n    },\r\n];","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\components\\Block.jsx",["124","125","126"],"import React from 'react';\r\nimport {Draggable} from 'react-beautiful-dnd';\r\nimport {BLOCK_TYPES} from '../constants/blockTypes';\r\nimport BlockContent from './BlockContent';\r\nimport { useDispatch } from 'react-redux';\r\nimport { SELECT_BLOCK } from '../constants/actions';\r\nimport { selectBlock } from '../actions';\r\n\r\nfunction Block(props) {\r\n    const content = props.content;\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Draggable draggableId={props.id} index={props.index}>\r\n        {(provided) => (\r\n            <div className='Block' ref={provided.innerRef}\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            onClick={() => dispatch(selectBlock(props))}>\r\n                <BlockContent {...props} />\r\n            </div>\r\n        )}\r\n        </Draggable>\r\n    );\r\n}\r\n\r\nexport default Block;","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\components\\ToolbarBlock.jsx",["127","128","129","130"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { BLOCK_TYPES } from '../constants/blockTypes';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport Block from './Block';\r\nimport styled from 'styled-components';\r\nimport BlockContent from './BlockContent';\r\n\r\nconst DraggableToolbarBlock = styled.div`\r\n    border: 2px solid indigo;\r\n    margin: 5px;\r\n    padding: 20px;\r\n`;\r\nfunction ToolbarBlock(props) {\r\n    const { content, type, index } = props;\r\n    return (\r\n        <Draggable draggableId={type} index={index}>\r\n        { provided => (\r\n            <DraggableToolbarBlock ref={provided.innerRef}\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}>\r\n                <BlockContent {...props} />\r\n            </DraggableToolbarBlock>\r\n        )}\r\n        \r\n        </Draggable>\r\n    );\r\n}\r\n\r\nexport default ToolbarBlock;","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\components\\datasource\\Datasource.jsx",["131","132"],"import Axios from 'axios';\r\nimport React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { DATASOURCE_REMOTE, DATASOURCE_STATIC, DATASOURCE_LOCAL } from '../../constants/datasourceTypes';\r\nimport BlockContent from '../BlockContent';\r\nimport DatasourceRemote from './DatasourceRemote';\r\nimport DatasourceStatic from './DatasourceStatic';\r\nimport DatasourceLocal from './DatasourceLocal';\r\n\r\n\r\nfunction Datasource(props) {\r\n    const selectedBlock = useSelector(state => state.selected);\r\n\r\n    if (!selectedBlock) return null;\r\n\r\n    const renderDatasourcePanel = (type) => {\r\n        if (type === DATASOURCE_STATIC) return <DatasourceStatic />;\r\n        if (type === DATASOURCE_REMOTE) return <DatasourceRemote />;\r\n        if (type === DATASOURCE_LOCAL) return <DatasourceLocal />;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { renderDatasourcePanel(selectedBlock.data.type) }\r\n            <div>Preview:</div>\r\n            <BlockContent {...selectedBlock} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Datasource;","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\constants\\actions.js",[],"C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\constants\\datasourceTypes.js",[],"C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\components\\BlockContent.jsx",["133","134","135"],"import { faAlignLeft, faHeading, faImage } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { render } from '@testing-library/react';\r\nimport React from 'react';\r\nimport { BLOCK_TYPES } from '../constants/blockTypes';\r\n\r\nfunction BlockContent(props) {\r\n    const { type, content } = props;\r\n    let renderedBlock;\r\n    switch (type) {\r\n        case BLOCK_TYPES.HEADLINE:\r\n            if (content) {\r\n                renderedBlock = <h3>{content}</h3>;\r\n            } else {\r\n                renderedBlock =  <FontAwesomeIcon icon={faHeading} />\r\n            }\r\n            \r\n            break;\r\n        case BLOCK_TYPES.PARAGRAPH:\r\n            if (content) {\r\n                renderedBlock = <p>{content}</p>;\r\n            } else {\r\n                renderedBlock = <FontAwesomeIcon icon={faAlignLeft} />\r\n            }\r\n            break;\r\n        case BLOCK_TYPES.IMAGE:\r\n            if (content) {\r\n                renderedBlock = <img src={content} />;\r\n            } else {\r\n                renderedBlock = <FontAwesomeIcon icon={faImage} />\r\n            }\r\n            \r\n            break;\r\n    }\r\n    return (\r\n        <div>\r\n            { renderedBlock }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BlockContent;","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\components\\datasource\\DatasourceRemote.jsx",["136","137","138","139","140"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeBlock, updateBlock, updateSelectedBlock } from '../../actions';\r\nimport { BLOCK_TYPES } from '../../constants/blockTypes';\r\nimport { DATASOURCE_REMOTE } from '../../constants/datasourceTypes';\r\n\r\nfunction DatasourceRemote(props) {\r\n    const selectedBlock = useSelector(state => state.selected);\r\n    // const [text, setText] = useState(selectedBlock.data.params.title);\r\n    const dispatch = useDispatch();\r\n\r\n    // useEffect(() => {\r\n    //     setText(selectedBlock.data.params.title);\r\n    // }, [selectedBlock]);\r\n\r\n    const setTitles = e => {\r\n        dispatch(updateSelectedBlock({\r\n            ...selectedBlock,\r\n            data: {\r\n                ...selectedBlock.data,\r\n                params: {\r\n                    ...selectedBlock.data.params,\r\n                    titles: e.target.value,\r\n                    origin: '*'\r\n                }\r\n            }\r\n        }));\r\n    }\r\n\r\n    const setQueryString = () => {\r\n        const { data } = selectedBlock;\r\n        const queryString = Object.keys(selectedBlock.data.params).map(key => key + '=' + data.params[key]).join('&');\r\n        console.log(selectedBlock.data.url + '?' + queryString);\r\n        axios.get(selectedBlock.data.url, selectedBlock.data.params, data.config).then(res => console.log(res));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Source: <input type='text' value={selectedBlock.data.src} />\r\n            Data Type: \r\n            <select>\r\n                <option>Title</option>\r\n                <option>Abstract</option>\r\n            </select>\r\n            Search: <input type='text' value={selectedBlock.data.params.titles} onChange={setTitles} />\r\n            <button onClick={setQueryString}>Search</button>\r\n\r\n            \r\n            <button onClick={() => dispatch(removeBlock(selectedBlock))}>Delete</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DatasourceRemote;\r\n\r\n// <button onClick={() => dispatch(updateBlock({\r\n//     ...selectedBlock,\r\n//     content: selectedBlock.content,\r\n//     data: {\r\n//         type: DATASOURCE_REMOTE,\r\n//         content: selectedBlock.content\r\n//     }\r\n// }))}>Update</button>","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\components\\datasource\\DatasourceStatic.jsx",["141","142","143"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeBlock, updateBlock } from '../../actions';\r\nimport { BLOCK_TYPES } from '../../constants/blockTypes';\r\nimport { DATASOURCE_STATIC } from '../../constants/datasourceTypes';\r\nimport { updateSelectedBlock } from '../../actions';\r\n\r\nfunction DatasourceStatic(props) {\r\n    const selectedBlock = useSelector(state => state.selected);\r\n    // const [text, setText] = useState(selectedBlock.content);\r\n    const { content } = selectedBlock;\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = e => {\r\n        dispatch(updateSelectedBlock({\r\n            ...selectedBlock,\r\n            content: e.target.value\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Content: <textarea value={content} onChange={handleChange} />\r\n            <button onClick={() => dispatch(updateBlock({\r\n                ...selectedBlock,\r\n                content: content,\r\n                data: {\r\n                    type: DATASOURCE_STATIC,\r\n                    content: content\r\n                }\r\n            }))}>Update</button>\r\n            <button onClick={() => dispatch(removeBlock(selectedBlock))}>Delete</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DatasourceStatic;","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\components\\datasource\\DatasourceLocal.jsx",["144","145","146","147","148","149"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeBlock, updateBlock, updateSelectedBlock } from '../../actions';\r\nimport { BLOCK_TYPES } from '../../constants/blockTypes';\r\nimport { DATASOURCE_LOCAL } from '../../constants/datasourceTypes';\r\nimport axios from 'axios';\r\n\r\nfunction DatasourceLocal(props) {\r\n\r\n    const selectedBlock = useSelector(state => state.selected);\r\n    useEffect(() => {\r\n        axios.get('http://localhost:5000/api/tables').then(res => setTables(res.data));\r\n    }, [selectedBlock]);\r\n\r\n    const [tables, setTables] = useState([]);\r\n    const [selectedTable, setSelectedTable] = useState('');\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:5000/api/table/${selectedTable}/columns`).then(res => setFields(res.data))\r\n    }, [selectedTable]);\r\n\r\n    const [fields, setFields] = useState([]);\r\n    const [selectedField, setSelectedField] = useState(0);\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:5000/api/table/${selectedTable}/column/${selectedField}`).then(res => setPreview(res.data));\r\n    }, [selectedField]);\r\n\r\n    const [preview, setPreview] = useState(selectedBlock.content);  \r\n    useEffect(() => {\r\n        dispatch(updateSelectedBlock({\r\n            ...selectedBlock,\r\n            content: preview\r\n        }));\r\n    }, [preview]);\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const selectTable = e => {\r\n        setSelectedTable(e.target.value);\r\n    }\r\n\r\n    const selectField = e => {\r\n        setSelectedField(e.target.value);\r\n    }\r\n\r\n    \r\n    console.log(fields);\r\n    return (\r\n        <div>\r\n            <div>\r\n            Table: \r\n            <select onChange={selectTable}>\r\n                {tables.map(tableName => <option>{tableName}</option>)}\r\n            </select>\r\n            </div>\r\n            <div>\r\n            Field:\r\n            <select onChange={selectField}>\r\n            {fields.map(fieldName => <option>{fieldName}</option>)}\r\n            </select>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DatasourceLocal;","C:\\Users\\asaph\\Documents\\Projects\\block-editor\\client\\src\\components\\DbFormAddCountry.jsx",[],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":1,"column":8,"nodeType":"156","messageId":"157","endLine":1,"endColumn":12},{"ruleId":"154","severity":1,"message":"158","line":3,"column":8,"nodeType":"156","messageId":"157","endLine":3,"endColumn":12},{"ruleId":"154","severity":1,"message":"159","line":4,"column":27,"nodeType":"156","messageId":"157","endLine":4,"endColumn":36},{"ruleId":"154","severity":1,"message":"160","line":10,"column":8,"nodeType":"156","messageId":"157","endLine":10,"endColumn":13},{"ruleId":"154","severity":1,"message":"161","line":1,"column":8,"nodeType":"156","messageId":"157","endLine":1,"endColumn":13},{"ruleId":"154","severity":1,"message":"162","line":2,"column":17,"nodeType":"156","messageId":"157","endLine":2,"endColumn":26},{"ruleId":"154","severity":1,"message":"163","line":2,"column":28,"nodeType":"156","messageId":"157","endLine":2,"endColumn":36},{"ruleId":"154","severity":1,"message":"164","line":9,"column":11,"nodeType":"156","messageId":"157","endLine":9,"endColumn":21},{"ruleId":"165","severity":1,"message":"166","line":92,"column":13,"nodeType":"167","messageId":"168","endLine":92,"endColumn":19},{"ruleId":"165","severity":1,"message":"166","line":101,"column":13,"nodeType":"167","messageId":"168","endLine":101,"endColumn":19},{"ruleId":"154","severity":1,"message":"169","line":2,"column":16,"nodeType":"156","messageId":"157","endLine":2,"endColumn":20},{"ruleId":"154","severity":1,"message":"170","line":1,"column":10,"nodeType":"156","messageId":"157","endLine":1,"endColumn":19},{"ruleId":"165","severity":1,"message":"166","line":7,"column":13,"nodeType":"167","messageId":"168","endLine":7,"endColumn":19},{"ruleId":"165","severity":1,"message":"166","line":10,"column":13,"nodeType":"167","messageId":"168","endLine":10,"endColumn":19},{"ruleId":"154","severity":1,"message":"171","line":1,"column":10,"nodeType":"156","messageId":"157","endLine":1,"endColumn":25},{"ruleId":"154","severity":1,"message":"172","line":2,"column":10,"nodeType":"156","messageId":"157","endLine":2,"endColumn":19},{"ruleId":"154","severity":1,"message":"173","line":2,"column":21,"nodeType":"156","messageId":"157","endLine":2,"endColumn":32},{"ruleId":"154","severity":1,"message":"174","line":2,"column":34,"nodeType":"156","messageId":"157","endLine":2,"endColumn":41},{"ruleId":"154","severity":1,"message":"175","line":3,"column":9,"nodeType":"156","messageId":"157","endLine":3,"endColumn":20},{"ruleId":"154","severity":1,"message":"176","line":6,"column":10,"nodeType":"156","messageId":"157","endLine":6,"endColumn":22},{"ruleId":"154","severity":1,"message":"177","line":10,"column":11,"nodeType":"156","messageId":"157","endLine":10,"endColumn":18},{"ruleId":"154","severity":1,"message":"171","line":1,"column":10,"nodeType":"156","messageId":"157","endLine":1,"endColumn":25},{"ruleId":"154","severity":1,"message":"175","line":3,"column":10,"nodeType":"156","messageId":"157","endLine":3,"endColumn":21},{"ruleId":"154","severity":1,"message":"178","line":5,"column":8,"nodeType":"156","messageId":"157","endLine":5,"endColumn":13},{"ruleId":"154","severity":1,"message":"177","line":15,"column":13,"nodeType":"156","messageId":"157","endLine":15,"endColumn":20},{"ruleId":"154","severity":1,"message":"161","line":1,"column":8,"nodeType":"156","messageId":"157","endLine":1,"endColumn":13},{"ruleId":"154","severity":1,"message":"162","line":2,"column":17,"nodeType":"156","messageId":"157","endLine":2,"endColumn":26},{"ruleId":"154","severity":1,"message":"179","line":3,"column":10,"nodeType":"156","messageId":"157","endLine":3,"endColumn":16},{"ruleId":"180","severity":1,"message":"181","line":10,"column":5,"nodeType":"182","messageId":"183","endLine":34,"endColumn":6},{"ruleId":"184","severity":1,"message":"185","line":28,"column":33,"nodeType":"186","endLine":28,"endColumn":54},{"ruleId":"154","severity":1,"message":"162","line":2,"column":17,"nodeType":"156","messageId":"157","endLine":2,"endColumn":26},{"ruleId":"154","severity":1,"message":"163","line":2,"column":28,"nodeType":"156","messageId":"157","endLine":2,"endColumn":36},{"ruleId":"154","severity":1,"message":"187","line":4,"column":23,"nodeType":"156","messageId":"157","endLine":4,"endColumn":34},{"ruleId":"154","severity":1,"message":"175","line":5,"column":10,"nodeType":"156","messageId":"157","endLine":5,"endColumn":21},{"ruleId":"154","severity":1,"message":"188","line":6,"column":10,"nodeType":"156","messageId":"157","endLine":6,"endColumn":27},{"ruleId":"154","severity":1,"message":"162","line":1,"column":17,"nodeType":"156","messageId":"157","endLine":1,"endColumn":26},{"ruleId":"154","severity":1,"message":"163","line":1,"column":28,"nodeType":"156","messageId":"157","endLine":1,"endColumn":36},{"ruleId":"154","severity":1,"message":"175","line":4,"column":10,"nodeType":"156","messageId":"157","endLine":4,"endColumn":21},{"ruleId":"154","severity":1,"message":"189","line":3,"column":10,"nodeType":"156","messageId":"157","endLine":3,"endColumn":21},{"ruleId":"154","severity":1,"message":"187","line":3,"column":23,"nodeType":"156","messageId":"157","endLine":3,"endColumn":34},{"ruleId":"154","severity":1,"message":"175","line":4,"column":10,"nodeType":"156","messageId":"157","endLine":4,"endColumn":21},{"ruleId":"154","severity":1,"message":"190","line":5,"column":10,"nodeType":"156","messageId":"157","endLine":5,"endColumn":26},{"ruleId":"191","severity":1,"message":"192","line":25,"column":8,"nodeType":"193","endLine":25,"endColumn":23,"suggestions":"194"},{"ruleId":"191","severity":1,"message":"195","line":33,"column":8,"nodeType":"193","endLine":33,"endColumn":17,"suggestions":"196"},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Page' is defined but never used.","'Draggable' is defined but never used.","'axios' is defined but never used.","'Axios' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'properties' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'uuid' is defined but never used.","'ADD_BLOCK' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faHeading' is defined but never used.","'faAlignLeft' is defined but never used.","'faImage' is defined but never used.","'BLOCK_TYPES' is defined but never used.","'SELECT_BLOCK' is defined but never used.","'content' is assigned a value but never used.","'Block' is defined but never used.","'render' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'updateBlock' is defined but never used.","'DATASOURCE_REMOTE' is defined but never used.","'removeBlock' is defined but never used.","'DATASOURCE_LOCAL' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedTable'. Either include it or remove the dependency array.","ArrayExpression",["199"],"React Hook useEffect has missing dependencies: 'dispatch' and 'selectedBlock'. Either include them or remove the dependency array.",["200"],"no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},"Update the dependencies array to be: [selectedField, selectedTable]",{"range":"205","text":"206"},"Update the dependencies array to be: [dispatch, preview, selectedBlock]",{"range":"207","text":"208"},[1128,1143],"[selectedField, selectedTable]",[1364,1373],"[dispatch, preview, selectedBlock]"]